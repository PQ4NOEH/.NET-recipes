@using Altea.Common.Classes
@using Heracles.Services
<!DOCTYPE html>

@* ReSharper disable PossibleMultipleEnumeration *@
@{
    AlteaRoleProvider roleProvider = (AlteaRoleProvider)Roles.Provider;
    IEnumerable<AlteaModule> modules = roleProvider.GetModulesForUser(AlteaUser.Name, IsLocal);
    AlteaModule[] userModules = modules.Where(x => x.Role == "User").OrderBy(x => x.Position).ToArray();
    AlteaModule[] adminModules = modules.Where(x => x.Role == "Teacher" || x.Role == "Admin" || x.Role == "Developer")
        .OrderBy(x => x.Position)
        .ToArray();

    bool hasLevel = AlteaUser.Level != null;
    bool hasProLevel = AlteaUser.ProLevel != null;
        
    bool hasAdminBar = userModules.Length != 0 && adminModules.Length != 0;
    bool hasAchievements = userModules.Any(x => x.Name == "Achievements");

    IDictionary<Language, IEnumerable<SpeechType>> speechTypes;
    AlteaCache.GetOrInsert(
        "__SPEECHTYPES__",
        true,
        DictionaryService.GetSpeechTypes,
        AlteaCache.Scope.Altea,
        AlteaCache.Term.Largest,
        out speechTypes);
}
@* ReSharper restore PossibleMultipleEnumeration *@

<html>
<head>
    <meta charset="utf-8">
    <meta name="google" content="notranslate">
    <title>@ViewBag.Title</title>

    @{ Html.RenderPartial("_AppStyles"); }
    @RenderSection("Styles", false)
</head>
<body class="@(hasAdminBar ? "bn-an" : string.Empty)">
    <header id="tp">
        <a id="tp-lgw" href="@Url.Action("Index", "Home", new { area = "", id = "" })">
            <img id="tp-lg" src="@string.Format(ConfigurationManager.AppSettings["AlteaApplicationStorageSettingsUri"], "img", AppCore.Setting_SmallLogo2Name)">
        </a>
        <nav id="tp-mn" class="tp-n">
            <ul>
                @if (userModules.Length != 0)
                {
                    foreach (AlteaModule module in userModules)
                    {
                        if (module.Route != null && module.Route.Visible && (hasLevel || !module.Route.HasLevel) && (hasProLevel || !module.Route.HasProLevel))
                        {
                            <li>
                                @* ReSharper disable once AssignNullToNotNullAttribute *@
                                @Html.ActionLink(
                                    RoleNames.ResourceManager.GetString("MODULE_" + module.Name.Replace(' ', '_').ToUpperInvariant()),
                                    module.Route.Action,
                                    module.Route.RouteValues,
                                    null)
                            </li>
                        }
                    }
                }
                else if (!hasAdminBar)
                {
                    foreach (AlteaModule module in adminModules)
                    {
                        if (module.Route != null && module.Route.Visible && (hasLevel || !module.Route.HasLevel) && (hasProLevel || !module.Route.HasProLevel))
                        {
                            <li>
                                @* ReSharper disable once AssignNullToNotNullAttribute *@
                                @Html.ActionLink(
                                    RoleNames.ResourceManager.GetString("MODULE_" + module.Name.Replace(' ', '_').ToUpperInvariant()),
                                    module.Route.Action,
                                    module.Route.RouteValues,
                                    null)
                            </li>
                        }
                    }
                }
            </ul>
        </nav>
        <div id="tp-i">
            @if (hasAchievements)
            {
                <span class="tp-ic">
                    <a id="tp-ia" class="tp-is fa fa-trophy" href="@Url.Action("Index", "Achievements", new { area = "", id = "" })">
                        <span id="ach-tp-p">@AchievementsService.GetUserPoints(AlteaUser.Id)</span>
                    </a>
                </span>
            }
            <span class="tp-ic">
                <a id="tp-ip" class="tp-is fa fa-user"></a>
            </span>
            <span class="tp-ic">
                <a class="tp-is fa fa-power-off" href="@Url.Action("Logout", "Account", new { area = "", id = "" })"></a>
            </span>
        </div>
    </header>

    @if (hasAdminBar)
    {
        <nav id="tp-an" class="tp-n">
            <ul>
                @foreach (AlteaModule module in adminModules)
                {
                    if (module.Route != null)
                    {
                        <li>
                            @* ReSharper disable once AssignNullToNotNullAttribute *@
                            @{
                        string moduleName = module.Name.Replace(' ', '_');
                        @Html.ActionLink(
                                    RoleNames.ResourceManager.GetString("MODULE_" + moduleName.ToUpperInvariant()),
                                    module.Route.Action,
                                    module.Route.RouteValues,
                                    new Dictionary<string, object> { { "id", "nav_" + moduleName.ToLowerInvariant() } });
                            }
                        </li>
                    }
                }
            </ul>
        </nav>
    }

    <div id="ct" class="@(hasAdminBar ? "ct-an" : string.Empty) @(ViewHints.FullContainer ? "ct-fw" : string.Empty) @(ViewHints.HideWiseFooter ? "ct-hwf" : string.Empty)">
        <div id="ct-c">
            @RenderBody()
        </div>
    </div>

    @if (!ViewHints.HideWiseFooter)
    {
        Html.RenderPartial("_WiseFooter");
    }
    
    @if (hasAchievements)
    {
        <div id="ach-mw">
            <div id="ach-w">
                <div id="ach-c">
                    <span id="ach-tt">@GeneralResources.AchievementUnlocked</span>
                    <span id="ach-t">
                        <span id="ach-n"></span>
                        <span id="ach-p"></span>
                        <span id="ach-pi" class="fa fa-trophy"></span>
                    </span>
                </div>
            </div>
        </div>
    }

    @if (!IsDebug())
    {
    /* Raygun configuration */
    @Scripts.Render("~/raygun")
    <script>
        (function() {
            var raygun = Raygun.init("X8g432kXiu6yV46IZHAsIw==", { disableAnonymousUserTracking: true });
            raygun.setUser(@Html.Raw(AlteaUser.Name.ToJson()), false, null, @Html.Raw(AlteaUser.Name.ToJson()));
            raygun.attach();
        })();
    </script>
    }

    <script type="text/javascript">
        window.user = Object.create({
            name: @Html.Raw(AlteaUser.Name.ToJson()),
            weekStart: @AlteaUser["week_start_day"],
            offsetDate: new Date().getTimezoneOffset()
        });
    </script>

    @{ Html.RenderPartial("_AppScripts"); }

    <script type="text/javascript">
        window.sm.setup({
            speechTypes: @Html.Raw(
                    speechTypes
                    .Where(x => x.Key == AlteaUser.From || x.Key == AlteaUser.To)
                    .ToDictionary(x => x.Key, x => x.Value)
                    .ToJson()),
            speechSelected: @Html.Raw(AlteaUser["speech_voices"].ToJson())
        });
    </script>

    @RenderSection("Scripts", false)

    @if (adminModules.Any(x => x.Role == "Developer"))
    {
    @Scripts.Render("~/Content/js/developer")
    }

    @{ Html.RenderPartial("_AppLanguageScripts"); }
</body>

</html>
