@{
    ViewBag.Title = AppCore.AppName;
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}

@{
    bool hasLevel = AlteaUser.Level != null;
    bool hasProLevel = AlteaUser.ProLevel != null;
    
    AlteaRoleProvider roleProvider = (AlteaRoleProvider)Roles.Provider;
    AlteaModule[] modules = roleProvider
        .GetModulesForUser(AlteaUser.Name, IsLocal)
        .Where(x => x.Role == "User"
            && x.Route != null
            && x.Route.Visible
            && x.Route.StatsVisible
            && (hasLevel || !x.Route.HasLevel)
            && (hasProLevel || !x.Route.HasProLevel))
        .OrderBy(x => x.Position)
        .ToArray();

    int modulesSize = 0;

    if (modules.Length > 9)
    {
        modulesSize = 10;
    }
    else if (modules.Length > 6)
    {
        modulesSize = 9;
    }
    else if (modules.Length > 3)
    {
        modulesSize = 6;
    }
    else
    {
        modulesSize = modules.Length;
    }
}

<div id="hh-mdl" class="hh-mdl-@modulesSize">
    @foreach (AlteaModule module in modules)
    {
        if (module.Route != null)
        {
            <div class="hh-mdl-w hh-mdl-w-@modulesSize">
                <a href="@Url.Action(module.Route.Action, module.Route.RouteValues)">
                    <div class="hh-mdl hh-mdl-@module.Name.Replace(" ", "").ToLowerInvariant() @(module.Route.HasStats ? "hh-mdl-s hh-mdl-sw" : "hh-mdl-ns")">
                        <div class="hh-mdl-t">
                            @RoleNames.ResourceManager.GetString("MODULE_" + module.Name.Replace(' ', '_').ToUpperInvariant())
                        </div>
                        @if (module.Route.HasStats)
                        {
                            <div class="hh-mdl-st-ww">
                                <div class="hh-mdl-st-w">
                                    <div class="hh-mdl-st-c">
                                        <div class="app-spinner app-spinner-large app-spinner-active"></div>
                                        <div class="hh-mdl-st"></div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </a>
            </div>
        }
    }
</div>

<!--<div class="hh-mdl-w hh-mdl-m">
    <div class="hh-mdl">
    </div>
</div>-->

@section Scripts {
    <script type="text/javascript">
        window.model = {
            modules: @Html.Raw(@modules.Where(x => x.Route.HasStats).Select(x => x.Name.Replace(" ", "").ToLowerInvariant()).ToJson())
        };
    </script>
    @Scripts.Render("~/Content/js/stats")
}